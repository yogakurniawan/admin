{"version":3,"sources":["lib/AuthProvider.js","Users.js","Caleg.js","App.js","serviceWorker.js","index.js"],"names":["baseConfig","userProfilePath","localStorageTokenName","localStorageProfileName","handleAuthStateChange","_handleAuthStateChange","Object","asyncToGenerator","regenerator_default","a","mark","_callee","auth","config","snapshot","profile","firebaseToken","user","wrap","_context","prev","next","firebase","database","ref","uid","once","sent","val","getIdToken","localStorage","setItem","JSON","stringify","abrupt","signOut","removeItem","Error","stop","this","_x","_x2","apply","arguments","AuthProvider","length","undefined","objectSpread","_ref","_callee2","type","params","username","password","alreadySignedIn","_context2","AUTH_LOGOUT","catch","currentUser","reload","AUTH_CHECK","Promise","resolve","onAuthStateChanged","AUTH_LOGIN","signInWithEmailAndPassword","_x3","_x4","exporter","posts","csv","convertToCSV","data","fields","downloadCSV","UserList","props","profileJson","getItem","parse","react_default","createElement","List","assign","title","Datagrid","TextField","source","isAdmin","EditButton","ShowButton","error","cardActionStyle","zIndex","display","float","UserShowActions","permissions","basePath","resource","CardActions_default","style","react","record","DeleteButton","UserShow","Show","actions","Users_UserShowActions","SimpleShowLayout","UserCreate","Create","SimpleForm","TextInput","UserEdit","Edit","CalegList","CalegShowActions","CalegShow","Caleg_CalegShowActions","CalegCreate","CalegEdit","authConfig","dataProvider","base64Uploader","RestProvider","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","trackedResources","name","isPublic","App","Admin","authProvider","Resource","show","list","edit","create","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e766fe55.chunk.js","sourcesContent":["/* globals localStorage */\nimport {\n  AUTH_LOGIN,\n  AUTH_LOGOUT,\n  AUTH_CHECK\n} from \"react-admin\";\nimport firebase from \"firebase\";\n\nconst baseConfig = {\n  userProfilePath: \"/users/\",\n  localStorageTokenName: \"RAFirebaseClientToken\",\n  localStorageProfileName: \"RAFirebaseProfile\",\n  handleAuthStateChange: async (auth, config) => {\n    if (auth) {\n      const snapshot = await firebase\n        .database()\n        .ref(config.userProfilePath + auth.user.uid)\n        .once(\"value\");\n      const profile = snapshot.val();\n\n      if (profile) {\n        const firebaseToken = await auth.user.getIdToken();\n        let user = { auth, profile, firebaseToken };\n        localStorage.setItem(config.localStorageTokenName, firebaseToken);\n        localStorage.setItem(\n          config.localStorageProfileName,\n          JSON.stringify(profile)\n        );\n        return user;\n      } else {\n        firebase.auth().signOut();\n        localStorage.removeItem(config.localStorageTokenName);\n        localStorage.removeItem(config.localStorageProfileName);\n        throw new Error(\"sign_in_error\");\n      }\n    } else {\n      localStorage.removeItem(config.localStorageTokenName);\n      localStorage.removeItem(config.localStorageProfileName);\n      throw new Error(\"sign_in_error\");\n    }\n  }\n};\n\nexport default (config = {}) => {\n  config = { ...baseConfig, ...config };\n\n  const firebaseLoaded = () =>\n    new Promise(resolve => {\n      firebase.auth().onAuthStateChanged(resolve);\n    });\n\n  return async (type, params) => {\n    if (type === AUTH_LOGOUT) {\n      config.handleAuthStateChange(null, config).catch(() => {});\n      return firebase.auth().signOut();\n    }\n\n    if (firebase.auth().currentUser) {\n      await firebase.auth().currentUser.reload();\n    }\n\n    if (type === AUTH_CHECK) {\n      await firebaseLoaded();\n\n      if (!firebase.auth().currentUser) {\n        throw new Error(\"sign_in_error\");\n      }\n\n      return true;\n    }\n\n    if (type === AUTH_LOGIN) {\n      const { username, password, alreadySignedIn } = params;\n      let auth = firebase.auth().currentUser;\n\n      if (!auth || !alreadySignedIn) {\n        auth = await firebase\n          .auth()\n          .signInWithEmailAndPassword(username, password);\n      }\n\n      return config.handleAuthStateChange(auth, config);\n    }\n\n    return false;\n  };\n};\n","import React, { Fragment } from \"react\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport { unparse as convertToCSV } from \"papaparse/papaparse.min\";\nimport {\n  downloadCSV,\n  Show,\n  SimpleShowLayout,\n  List,\n  Edit,\n  Create,\n  Datagrid,\n  TextField,\n  EditButton,\n  DeleteButton,\n  ShowButton,\n  SimpleForm,\n  TextInput\n} from \"react-admin\";\n\nconst exporter = posts => {\n  const csv = convertToCSV({\n    data: posts,\n    fields: [\"name\", \"username\", \"email\"]\n  });\n  downloadCSV(csv, \"posts\");\n};\n\nexport const UserList = props => {\n  try {\n    const profileJson = localStorage.getItem(\"RAFirebaseProfile\");\n    const profile = JSON.parse(profileJson);\n    return (\n      <List title=\"All users\" exporter={exporter} {...props}>\n        <Datagrid>\n          <TextField source=\"name\" />\n          <TextField source=\"username\" />\n          <TextField source=\"email\" />\n          {profile && profile.isAdmin ? <EditButton /> : null}\n          <ShowButton />\n        </Datagrid>\n      </List>\n    );\n  } catch (error) {}\n};\n\nconst cardActionStyle = {\n  zIndex: 2,\n  display: \"inline-block\",\n  float: \"right\"\n};\n\nconst UserShowActions = ({ permissions, basePath, data, resource }) => {\n  const profileJson = localStorage.getItem(\"RAFirebaseProfile\");\n  const profile = JSON.parse(profileJson);\n  return (\n    <CardActions style={cardActionStyle}>\n      {profile && profile.isAdmin && (\n        <Fragment>\n          <EditButton basePath={basePath} record={data} />\n          <DeleteButton basePath={basePath} record={data} resource={resource} />\n        </Fragment>\n      )}\n    </CardActions>\n  );\n};\n\nexport const UserShow = props => {\n  return (\n    <Show actions={<UserShowActions />} {...props}>\n      <SimpleShowLayout>\n        <TextField source=\"name\" />\n        <TextField source=\"username\" />\n        <TextField source=\"email\" />\n      </SimpleShowLayout>\n    </Show>\n  );\n};\n\nexport const UserCreate = props => (\n  <Create {...props}>\n    <SimpleForm>\n      <TextInput source=\"name\" />\n      <TextInput source=\"username\" />\n      <TextInput source=\"email\" />\n    </SimpleForm>\n  </Create>\n);\n\nexport const UserEdit = props => (\n  <Edit {...props}>\n    <SimpleForm>\n      <TextInput source=\"name\" />\n      <TextInput source=\"username\" />\n      <TextInput source=\"email\" />\n    </SimpleForm>\n  </Edit>\n);\n","import React, { Fragment } from \"react\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport { unparse as convertToCSV } from \"papaparse/papaparse.min\";\nimport {\n  downloadCSV,\n  Show,\n  SimpleShowLayout,\n  List,\n  Edit,\n  Create,\n  Datagrid,\n  TextField,\n  EditButton,\n  DeleteButton,\n  ShowButton,\n  SimpleForm,\n  TextInput\n} from \"react-admin\";\n\nconst exporter = posts => {\n  const csv = convertToCSV({\n    data: posts,\n    fields: [\n      \"nameLengkap\",\n      \"nik\",\n      \"desa\",\n      \"rt\",\n      \"rw\",\n      \"tps\",\n      \"kecamatan\",\n      \"koordinator\"\n    ]\n  });\n  downloadCSV(csv, \"daftar_caleg\");\n};\n\nexport const CalegList = props => {\n  try {\n    const profileJson = localStorage.getItem(\"RAFirebaseProfile\");\n    const profile = JSON.parse(profileJson);\n    return (\n      <List title=\"All caleg\" exporter={exporter} {...props}>\n        <Datagrid>\n          <TextField source=\"nameLengkap\" />\n          <TextField source=\"nik\" />\n          <TextField source=\"desa\" />\n          <TextField source=\"rt\" />\n          <TextField source=\"rw\" />\n          <TextField source=\"tps\" />\n          <TextField source=\"kecamatan\" />\n          <TextField source=\"koordinator\" />\n          {profile && profile.isAdmin ? <EditButton /> : null}\n          <ShowButton />\n        </Datagrid>\n      </List>\n    );\n  } catch (error) {}\n};\n\nconst cardActionStyle = {\n  zIndex: 2,\n  display: \"inline-block\",\n  float: \"right\"\n};\n\nconst CalegShowActions = ({ basePath, data, resource }) => {\n  const profileJson = localStorage.getItem(\"RAFirebaseProfile\");\n  const profile = JSON.parse(profileJson);\n  return (\n    <CardActions style={cardActionStyle}>\n      {profile && profile.isAdmin && (\n        <Fragment>\n          <EditButton basePath={basePath} record={data} />\n          <DeleteButton basePath={basePath} record={data} resource={resource} />\n        </Fragment>\n      )}\n    </CardActions>\n  );\n};\n\nexport const CalegShow = props => {\n  return (\n    <Show actions={<CalegShowActions />} {...props}>\n      <SimpleShowLayout>\n        <TextField source=\"nameLengkap\" />\n        <TextField source=\"nik\" />\n        <TextField source=\"desa\" />\n        <TextField source=\"rt\" />\n        <TextField source=\"rw\" />\n        <TextField source=\"tps\" />\n        <TextField source=\"kecamatan\" />\n        <TextField source=\"koordinator\" />\n      </SimpleShowLayout>\n    </Show>\n  );\n};\n\nexport const CalegCreate = props => (\n  <Create {...props}>\n    <SimpleForm>\n      <TextInput source=\"nameLengkap\" />\n      <TextInput source=\"nik\" />\n      <TextInput source=\"desa\" />\n      <TextInput source=\"rt\" />\n      <TextInput source=\"rw\" />\n      <TextInput source=\"tps\" />\n      <TextInput source=\"kecamatan\" />\n      <TextInput source=\"koordinator\" />\n    </SimpleForm>\n  </Create>\n);\n\nexport const CalegEdit = props => (\n  <Edit {...props}>\n    <SimpleForm>\n      <TextInput source=\"nameLengkap\" />\n      <TextInput source=\"nik\" />\n      <TextInput source=\"desa\" />\n      <TextInput source=\"rt\" />\n      <TextInput source=\"rw\" />\n      <TextInput source=\"tps\" />\n      <TextInput source=\"kecamatan\" />\n      <TextInput source=\"koordinator\" />\n    </SimpleForm>\n  </Edit>\n);\n","import React, { Component } from \"react\";\nimport { Admin, Resource } from \"react-admin\";\nimport { RestProvider, base64Uploader } from \"ra-data-firebase-client\";\nimport AuthProvider from \"./lib/AuthProvider\";\n\nimport { UserList, UserEdit, UserCreate, UserShow } from \"./Users\";\nimport { CalegList, CalegEdit, CalegCreate, CalegShow } from \"./Caleg\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDyTBLLk2DC1GYovd_nmxYKF1Lkl83P7V0\",\n  authDomain: \"hazel-delight-146613.firebaseapp.com\",\n  databaseURL: \"https://hazel-delight-146613.firebaseio.com\",\n  projectId: \"hazel-delight-146613\",\n  storageBucket: \"hazel-delight-146613.appspot.com\",\n  messagingSenderId: \"419611045372\"\n};\n\nconst trackedResources = [\n  { name: \"caleg\", isPublic: true },\n  { name: \"users\", isPublic: true }\n];\n\nconst authConfig = {\n  userProfilePath: \"/users/\"\n};\n\n// to run this demo locally, please feel free to disable authProvider to bypass login page\n\nconst dataProvider = base64Uploader(\n  RestProvider(firebaseConfig, { trackedResources })\n);\n\nclass App extends Component {\n  render() {\n    return (\n      <Admin\n        dataProvider={dataProvider}\n        authProvider={AuthProvider(authConfig)}\n      >\n        <Resource\n          name=\"users\"\n          show={UserShow}\n          list={UserList}\n          edit={UserEdit}\n          create={UserCreate}\n        />\n        <Resource\n          name=\"caleg\"\n          show={CalegShow}\n          list={CalegList}\n          edit={CalegEdit}\n          create={CalegCreate}\n        />\n      </Admin>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}